#!/bin/bash

BACKUP_DIR="/var/autobackupdb"
GZIP="-9"

set -e
set -o pipefail
shopt -s nullglob

export GZIP
cd "$BACKUP_DIR"

if which pg_dump > /dev/null; then
	DB_LIST=( $(su postgres -c "psql -tA -c \"SELECT datname FROM pg_database WHERE datname \!~ '^(template)'\"") )
	for DBNAME in "${DB_LIST[@]}"; do
		printf "* Dumping pgsql '%s'... " "$DBNAME"
		TMPDB=$(mktemp "$BACKUP_DIR/tmp.$DBNAME.XXXXXX")
		su postgres -c "pg_dump -Fc \"$DBNAME\"" > "$TMPDB"
		mv "$TMPDB" "$BACKUP_DIR/pgsql.$DBNAME.dump.Fc"
		printf "Done.\n"
	done
fi

if which mysql > /dev/null; then
	DB_LIST=( $(mysql -Bse 'show databases') )
	for DBNAME in "${DB_LIST[@]}"; do
		if [ "$DBNAME" = "information_schema" -o "$DBNAME" = "performance_schema" ]; then
			continue
		fi

		printf "* Dumping mysql '%s'... " "$DBNAME"
		TMPDB=$(mktemp "$BACKUP_DIR/tmp.$DBNAME.XXXXXX")
		mysqldump --events "$DBNAME" | gzip > "$TMPDB"
		mv "$TMPDB" "$BACKUP_DIR/mysql.$DBNAME.dump.gz"
		printf "Done.\n"
	done
fi

if which mongo > /dev/null; then
	DB_LIST=( $(mongo --quiet --eval  "printjson(db.adminCommand('listDatabases'))" | php -r '$r=json_decode(file_get_contents("php://stdin"),true);foreach($r["databases"]as$d){printf("%s\n",$d["name"]);};') )
	for DBNAME in "${DB_LIST[@]}"; do
		printf "* Dumping mongo '%s'... " "$DBNAME"
		TMPDB=$(mktemp -d "$BACKUP_DIR/mongo.$DBNAME.db.XXXXXX")
		mongodump -o "$TMPDB" -d "$DBNAME"
		rm -Rf "$BACKUP_DIR/mongo.$DBNAME.db"
		mv "$TMPDB" "$BACKUP_DIR/mongo.$DBNAME.db"
		printf "Done.\n"
	done
fi
